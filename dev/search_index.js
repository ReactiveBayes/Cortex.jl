var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Cortex","category":"page"},{"location":"#Cortex","page":"Home","title":"Cortex","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Cortex. Cortex is a simple, efficient and modular framework for running message passing algorithms on graphs, with a focus on message-passing based Bayesian inference. This is a successor to the ReactiveMP.jl package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"implementation/#Implementation-Details","page":"Implementation","title":"Implementation Details","text":"","category":"section"},{"location":"implementation/#Value","page":"Implementation","title":"Value","text":"","category":"section"},{"location":"implementation/","page":"Implementation","title":"Implementation","text":"The Value type is a mutable struct that holds a value and metadata about the value.","category":"page"},{"location":"implementation/","page":"Implementation","title":"Implementation","text":"Cortex.Value\nCortex.ispending\nCortex.iscomputed","category":"page"},{"location":"implementation/#Cortex.Value","page":"Implementation","title":"Cortex.Value","text":"Value([ value ])\n\nA data structure that can hold any value.  Additionally, holds metadata about the value, such as\n\nispending: whether the value can be updated\niscomputed: whether the value has been computed and can be accessed\n\nIf the value is not yet computed, it is represented as UndefValue().\n\nSee also: ispending, iscomputed\n\n\n\n\n\n","category":"type"},{"location":"implementation/#Cortex.ispending","page":"Implementation","title":"Cortex.ispending","text":"ispending(value::Value)\n\nReturns true if the value is pending, false otherwise.\n\nSee also: iscomputed\n\n\n\n\n\n","category":"function"},{"location":"implementation/#Cortex.iscomputed","page":"Implementation","title":"Cortex.iscomputed","text":"iscomputed(value::Value)\n\nReturns true if the value has been computed, false otherwise.\n\nSee also: ispending\n\n\n\n\n\n","category":"function"},{"location":"implementation/","page":"Implementation","title":"Implementation","text":"The primary purpose of the Value type is to hold the result of a message and marginal computations.  The inference engine will use the metadata to determine if the value is pending and must be re-computed. Both messages and marginals use the Value type to hold their result either along edges of the graph or at the nodes of the graph.","category":"page"},{"location":"implementation/","page":"Implementation","title":"Implementation","text":"Cortex.setpending!\nCortex.setvalue!\nCortex.UndefValue","category":"page"},{"location":"implementation/#Cortex.setpending!","page":"Implementation","title":"Cortex.setpending!","text":"setpending!(value::Value)\n\nSets the value to pending.\n\nSee also: ispending, iscomputed\n\n\n\n\n\n","category":"function"},{"location":"implementation/#Cortex.setvalue!","page":"Implementation","title":"Cortex.setvalue!","text":"setvalue!(value::Value, value)\n\nSets the value of the value.\n\nSee also: ispending, iscomputed\n\n\n\n\n\n","category":"function"},{"location":"implementation/#Cortex.UndefValue","page":"Implementation","title":"Cortex.UndefValue","text":"UndefValue\n\nA placeholder value that represents a value that is not yet computed.\n\n\n\n\n\n","category":"type"}]
}
